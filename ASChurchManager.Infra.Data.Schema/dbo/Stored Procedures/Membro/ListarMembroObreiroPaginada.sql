CREATE PROCEDURE ListarMembroObreiroPaginada
	@PAGESIZE INT,
	@ROWSTART INT,
	@SORTING VARCHAR(30),
	@USUARIOID INT,
	@CAMPO VARCHAR(255) = NULL,
	@VALOR VARCHAR(255) = NULL,
	@CONGREGACAOID INT = NULL
AS
BEGIN
	SET NOCOUNT ON
	DECLARE 
		@SQLQUERY NVARCHAR(4000),
		@SQLFILTRO NVARCHAR(4000),
		@PARMDEFINITION NVARCHAR(500),
		@SQLFILTROAUX NVARCHAR(4000),
		@ORDERBY NVARCHAR(400),
		@OBREIRO NVARCHAR(4000)

	/* CONFIGURAÇÃO DO FILTRO */

    SET @SQLFILTRO = ''
	IF (CHARINDEX('CongregacaoId', @SORTING) > 0)
		SET @ORDERBY = REPLACE(@SORTING, 'CongregacaoId', 'C.Nome')
	ELSE
		SET @ORDERBY = 'M.' + ISNULL(@SORTING, 'Id ASC') 
		
	IF (NULLIF(@VALOR,'') IS NOT NULL)
	BEGIN
		IF (@CAMPO = 'CongregacaoId')
			SET @SQLFILTRO = @SQLFILTRO + ' AND (CongregacaoId = @VALOR)'
		ELSE
			SET @SQLFILTRO = @SQLFILTRO + ' AND M.' + @CAMPO + ' LIKE ''%' + @VALOR + '%'' COLLATE Latin1_General_CI_AI'
	END
	
	SET @OBREIRO = ''
	IF NOT EXISTS(SELECT * FROM Usuario U
				  INNER JOIN Congregacao C ON U.CongregacaoId = C.Id
				  WHERE U.Id = @USUARIOID AND C.Sede = 1)
	BEGIN
		SET @OBREIRO =
			' UNION '+
			'SELECT '+
			'    M.Id, M.Nome, M.NomeMae, M.Status, C.Nome AS CongregacaoNome, M.Cpf '+
			'FROM Membro M WITH(NOLOCK) '+ 
			'INNER JOIN Congregacao C WITH(NOLOCK) ON C.Id = M.CongregacaoId '+
			'INNER JOIN CongregacaoObreiro O WITH(NOLOCK) ON O.MembroId = M.Id '+
			'WHERE '+
			'    M.Status = 1 '+  
			'    AND M.TipoMembro = 3'+ 
			'    AND O.CongregacaoId IN (SELECT * FROM dbo.CongregacaoAcesso(@USUARIOID, default)) '
			+ @SQLFILTRO
	END

	IF OBJECT_ID('TEMPDB..#MEMBROOBREIRO') IS NOT NULL DROP TABLE #MEMBROOBREIRO
	CREATE TABLE #MEMBROOBREIRO(
		NUM INT IDENTITY(1,1),
		Id INT, 
		Nome VARCHAR(100), 
		NomeMae VARCHAR(100), 
		[Status] INT, 
		CongregacaoNome VARCHAR(50), 
		Cpf VARCHAR(15)
	)

	SET @SQLQUERY =
		'INSERT INTO #MEMBROOBREIRO(Id, Nome, NomeMae, [Status], CongregacaoNome, Cpf) ' +
		'SELECT '+
		'M.Id, M.Nome, M.NomeMae, M.Status, C.Nome AS CongregacaoNome, M.Cpf '+
		'FROM Membro M WITH(NOLOCK) ' + 
		'INNER JOIN Congregacao C WITH(NOLOCK) ON C.Id = M.CongregacaoId ' +
		'WHERE ' +
		' M.Status = 1 '+  
		' AND M.TipoMembro = 3 '+ 
		' AND ((ISNULL(@CONGREGACAOID, 0) > 0 AND M.CongregacaoId = @CONGREGACAOID) OR '+  
		'	   (ISNULL(@CONGREGACAOID, 0) = 0 AND M.CongregacaoId IN (SELECT * FROM dbo.CongregacaoAcesso(@USUARIOID, default)))) ' +
		+ @SQLFILTRO 
		+ @OBREIRO 

	SET @SQLQUERY = @SQLQUERY + ' SELECT TOP(@PAGESIZE) * FROM #MEMBROOBREIRO A WHERE A.NUM > @ROWSTART '

	/* CONFIGURAÇÃO DA ORDENAÇÃO*/
	IF (CHARINDEX('CongregacaoId', @SORTING) > 0)
		SET @SQLQUERY = @SQLQUERY + ' ORDER BY ' + REPLACE(@SORTING, 'CongregacaoId', 'A.CongregacaoNome')
	ELSE
		SET @SQLQUERY = @SQLQUERY + ' ORDER BY A.' + REPLACE(@ORDERBY, 'M.', '')

	/* CONFIGURAÇÃO DA ORDENAÇÃO*/

	/* EXECUCAÇÃO DA QUERY */
	SET @PARMDEFINITION = '@PAGESIZE INT, @ROWSTART INT, @VALOR VARCHAR(255), @USUARIOID INT, @CONGREGACAOID INT'
	EXECUTE SP_EXECUTESQL @SQLQUERY, @PARMDEFINITION, @PAGESIZE, @ROWSTART, @VALOR, @USUARIOID, @CONGREGACAOID 


	--/*RETORNA A QUANTIDADE DE LINHAS TOTAIS COM O FILTRO*/
	DECLARE @SQLCOUNT NVARCHAR(4000)
	SET @SQLCOUNT = 'SELECT COUNT(*) AS ROWSCOUNT FROM #MEMBROOBREIRO M WITH(NOLOCK) '
 	EXECUTE SP_EXECUTESQL @SQLCOUNT, @PARMDEFINITION,@PAGESIZE, @ROWSTART, @VALOR, @USUARIOID, @CONGREGACAOID 

END
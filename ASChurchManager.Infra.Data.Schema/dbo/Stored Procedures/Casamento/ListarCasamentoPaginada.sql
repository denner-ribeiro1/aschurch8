CREATE PROCEDURE ListarCasamentoPaginada
	@PAGESIZE INT,
	@ROWSTART INT,
	@SORTING VARCHAR(30),
	@USUARIOID INT,
	@CAMPO VARCHAR(255) = NULL,
	@VALOR VARCHAR(255) = NULL
AS
BEGIN
	SET NOCOUNT ON
	DECLARE 
		@SQLQUERY NVARCHAR(4000),
		@FILTRO NVARCHAR(4000),
		@PARMDEFINITION NVARCHAR(500),
		@SQLFILTROAUX NVARCHAR(4000),
		@ORDERBY NVARCHAR(400)

	/* ORDENAÇÃO */
	IF (CHARINDEX('Id', @SORTING) > 0)
		SET @ORDERBY = REPLACE(@SORTING, 'Id', 'CA.Id')
	ELSE IF (CHARINDEX('CongregacaoNome', @SORTING) > 0)
		SET @ORDERBY = REPLACE(@SORTING, 'CongregacaoNome', 'C.Nome')
	ELSE IF (CHARINDEX('NoivoNome', @SORTING) > 0)
		SET @ORDERBY = REPLACE(@SORTING, 'NoivoNome', 'ISNULL(Noivo.Nome, CA.NoivoNome)')
	ELSE IF (CHARINDEX('NoivaNome', @SORTING) > 0)
		SET @ORDERBY = REPLACE(@SORTING, 'NoivaNome', 'ISNULL(Noiva.Nome, CA.NoivaNome)')
	ELSE IF (CHARINDEX('DataCasamento', @SORTING) > 0)
		SET @ORDERBY = REPLACE(@SORTING, 'DataCasamento', 'CA.DataHoraInicio')

		

	/* CONFIGURAÇÃO DO FILTRO */
	SET @FILTRO = ''
	IF (NULLIF(@VALOR,'') IS NOT NULL)
	BEGIN
		IF (@CAMPO = 'Id')
			SET @FILTRO = @FILTRO + ' AND (CA.Id = @VALOR)' 
		ELSE IF (@CAMPO = 'CongregacaoNome')
			SET @FILTRO = @FILTRO + ' AND (CA.CongregacaoId = @VALOR)'
		ELSE IF (@CAMPO = 'NoivoNome')
			SET @FILTRO = @FILTRO + ' AND ISNULL(Noivo.Nome, CA.NoivoNome) LIKE ''%' + @VALOR + '%'' COLLATE Latin1_General_CI_AI'
		ELSE IF (@CAMPO = 'NoivaNome')
			SET @FILTRO = @FILTRO + ' AND ISNULL(Noiva.Nome, CA.NoivaNome) LIKE ''%' + @VALOR + '%'' COLLATE Latin1_General_CI_AI'	
		END

	SET @SQLQUERY =
	'SELECT TOP(@PAGESIZE) * FROM (' +
		'SELECT ' +
		'	CA.Id, C.Nome AS CongregacaoNome, CA.DataHoraInicio, ' +
		'	ISNULL(Noivo.Nome, CA.NoivoNome) AS NoivoNome, ' +
		'	ISNULL(Noiva.Nome, CA.NoivaNome) AS NoivaNome, ' +
		'	ROW_NUMBER() OVER (ORDER BY ' + @ORDERBY + ') AS NUM '+
		'FROM ' +
		'	Casamento CA WITH(NOLOCK)' +
		'INNER JOIN Congregacao C WITH(NOLOCK) ON CA.CongregacaoId = C.Id ' +
		'LEFT JOIN Membro Noivo WITH(NOLOCK) ON Noivo.Id = CA.NoivoId ' +
		'LEFT JOIN Membro Noiva WITH(NOLOCK) ON Noiva.Id = CA.NoivaId ' +
		'WHERE ' +
		'	CA.CongregacaoId IN (SELECT * FROM dbo.CongregacaoAcesso(@USUARIOID, default)) ' +
		@FILTRO +
	') AS A '+
	'WHERE '+
		'NUM > @ROWSTART '

	IF (CHARINDEX('DataCasamento', @SORTING) > 0)
		SET @SQLQUERY = @SQLQUERY + ' ORDER BY ' + REPLACE(@ORDERBY, 'CA.', '')
	ELSE
		SET @SQLQUERY = @SQLQUERY + ' ORDER BY ' + @SORTING
	
	/* CONFIGURAÇÃO DA ORDENAÇÃO*/
	

	/* EXECUCAÇÃO DA QUERY */
	SET @PARMDEFINITION = '@PAGESIZE INT, @ROWSTART INT, @VALOR VARCHAR(255), @USUARIOID INT'
	EXECUTE SP_EXECUTESQL @SQLQUERY, @PARMDEFINITION, @PAGESIZE, @ROWSTART, @VALOR, @USUARIOID

	--/*RETORNA A QUANTIDADE DE LINHAS TOTAIS COM O FILTRO*/
	DECLARE @SQLCOUNT NVARCHAR(4000)

	SET @SQLCOUNT =
		'SELECT ' +
		'	COUNT(*) AS ROWSCOUNT ' +
		'FROM ' +
		'	Casamento CA WITH(NOLOCK)' +
		'INNER JOIN Congregacao C WITH(NOLOCK) ON CA.CongregacaoId = C.Id ' +
		'LEFT JOIN Membro Noivo WITH(NOLOCK) ON Noivo.Id = CA.NoivoId ' +
		'LEFT JOIN Membro Noiva WITH(NOLOCK) ON Noiva.Id = CA.NoivaId ' +
		'WHERE ' +
		'	CA.CongregacaoId IN (SELECT * FROM dbo.CongregacaoAcesso(@USUARIOID, default)) ' +
		@FILTRO
	EXECUTE SP_EXECUTESQL @SQLCOUNT, @PARMDEFINITION,@PAGESIZE, @ROWSTART, @VALOR, @USUARIOID
END
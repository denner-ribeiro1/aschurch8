@model ASChurchManager.Web.Areas.Secretaria.ViewModels.Batismo.ConfiguracaoBatismoViewModel

@Html.ValidationSummary(true, "", new { @class = "text-danger" })

@Html.HiddenFor(model => model.Id)
@Html.HiddenFor(model => model.Status)
@Html.HiddenFor(model => model.Acao)
@Html.HiddenFor(model => model.PastoresCelebrantesJSON)
<div>
    <div class="row">
        <div class="col-sm-12">
            <div class="col-sm-2">
                @Html.LabelFor(model => model.IdadeMinima, htmlAttributes: new { @class = "control-label" })
                @if (Model.Status == ASChurchManager.Domain.Types.StatusBatismo.EmAberto &&
                   (Model.Acao == ASChurchManager.Domain.Types.Acao.Create ||
                    Model.Acao == ASChurchManager.Domain.Types.Acao.Update))
                {
                    @Html.EditorFor(model => model.IdadeMinima, new { htmlAttributes = new { @class = "form-control" } })
                }
                else
                {
                    @Html.EditorFor(model => model.IdadeMinima, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
                @Html.ValidationMessageFor(model => model.IdadeMinima, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-3">
                @Html.LabelFor(model => model.DataBatismo, htmlAttributes: new { @class = "control-label" })
                @if (Model.Status == ASChurchManager.Domain.Types.StatusBatismo.EmAberto &&
                  (Model.Acao == ASChurchManager.Domain.Types.Acao.Create ||
                   Model.Acao == ASChurchManager.Domain.Types.Acao.Update))
                {
                    @Html.EditorFor(model => model.DataBatismo, new { htmlAttributes = new { @class = "form-control datepicker" } })
                }
                else
                {
                    @Html.EditorFor(model => model.DataBatismo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
                @Html.ValidationMessageFor(model => model.DataBatismo, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-2">
                @Html.LabelFor(model => model.HoraBatismo, htmlAttributes: new { @class = "control-label" })
                @if (Model.Status == ASChurchManager.Domain.Types.StatusBatismo.EmAberto &&
                  (Model.Acao == ASChurchManager.Domain.Types.Acao.Create ||
                   Model.Acao == ASChurchManager.Domain.Types.Acao.Update))
                {
                    @Html.TextBoxFor(model => model.HoraBatismo, Model.IsReadOnly ? (object)new { @disabled = "disabled", @class = "form-control" } : new { @class = "form-control" })
                }
                else
                {
                    @Html.EditorFor(model => model.HoraBatismo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
                @Html.ValidationMessageFor(model => model.HoraBatismo, "", new { @class = "text-danger" })
            </div>
            <div class="col-sm-3">
                @Html.LabelFor(model => model.DataMaximaCadastro, htmlAttributes: new { @class = "control-label" })
                @if (Model.Status == ASChurchManager.Domain.Types.StatusBatismo.EmAberto &&
               (Model.Acao == ASChurchManager.Domain.Types.Acao.Create ||
                Model.Acao == ASChurchManager.Domain.Types.Acao.Update))
                {
                    @Html.EditorFor(model => model.DataMaximaCadastro, new { htmlAttributes = new { @class = "form-control datepicker" } })
                }
                else
                {
                    @Html.EditorFor(model => model.DataMaximaCadastro, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                }
                @Html.ValidationMessageFor(model => model.DataMaximaCadastro, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <fieldset>
                <legend>Pastores Celebrantes</legend>
                @if (!Model.IsReadOnly)
                {
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="col-sm-2">
                                <div style="margin-bottom:5px">
                                    <a href="javascript:void(0)" id="lnkBuscarPastorCelebrante" class="control-label">Cód. Pastor.</a>
                                </div>
                                @Html.EditorFor(model => model.MembroId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MembroId, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4">
                                @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-1">
                                <br />
                                <input id="btnAddPastor" type="submit" value="Adicionar Pastor" class="btn btn-primary" />
                            </div>
                        </div>
                    </div>
                }
                <div class="row" style="margin-top:10px">
                    <div class="col-md-12 jtable-main-container">
                        <table style="width:100%" id="tbPastor" class="jtable">
                            <thead>
                                <tr>
                                    <th class="jtable-column-header" style="width: 10%;">
                                        <div class="jtable-column-header-container">
                                            <span class="jtable-column-header-text">Código</span>
                                        </div>
                                    </th>
                                    <th class="jtable-column-header" style="width: 70%;">
                                        <div class="jtable-column-header-container">
                                            <span class="jtable-column-header-text">Nome do Pastor</span>
                                        </div>
                                    </th>
                                    @if (!Model.IsReadOnly)
                                    {
                                        <th class="jtable-column-header" style="width: 20%;">
                                            <div class="jtable-column-header-container">
                                            </div>
                                        </th>
                                    }

                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    @if (!Model.IsReadOnly)
                                    {
                                        <td colspan="3">
                                            Não existem Pastores cadastrados para o Batismo
                                        </td>
                                    }
                                    else
                                    {
                                        <td colspan="2">
                                            Não existem Pastores cadastrados para o Batismo
                                        </td>
                                    }
                                </tr>
                            </tbody>

                        </table>
                    </div>
                </div>
            </fieldset>
        </div>
    </div>
</div>

<script type="text/javascript">
    var pastorCeleb = JSON.parse('@Html.Raw(Json.Serialize(Model.PastoresCelebrantes))');
</script>
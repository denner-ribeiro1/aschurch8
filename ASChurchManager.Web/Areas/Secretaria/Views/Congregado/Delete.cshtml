@model ASChurchManager.Web.Areas.Secretaria.ViewModels.Congregado.CongregadoViewModel
@{
    ViewBag.Title = "Membro_Delete";
}

<section class="content">
    <div class="row">
        <div class="col-lg-12">
            <div class="box box-primary">
                <div class="box-header">
                    <h3 class="box-title">
                        Congregados - Exclusão
                    </h3>
                </div>
                <div class="box-body">
                    <div style="height: 100%;"></div>
                    <div>
                        <h3 style="color: red">Você tem certeza de que deseja excluir este registro?</h3>
                        <div>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <p style="clear: both" />
                            <div class="form-group">
                                <div class="col-sm-2">
                                    <a href="javascript:void(0)" id="lnkBuscarCongregacao" class="control-label">Cód. Congregação</a>
                                    @Html.EditorFor(model => model.CongregacaoId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.CongregacaoId, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-sm-9">
                                    @Html.LabelFor(model => model.CongregacaoNome, htmlAttributes: new { @class = "control-label" })
                                    @Html.EditorFor(model => model.CongregacaoNome, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                    @Html.ValidationMessageFor(model => model.CongregacaoNome, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <p style="clear: both" />
                            <fieldset>
                                <legend>Dados Pessoais</legend>
                                <div>
                                    <div class="col-sm-7">
                                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.DataNascimento, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.DataNascimento, new { htmlAttributes = new { @class = "form-control datepicker", @readonly = "readonly" } })
                                        @Html.ValidationMessageFor(model => model.DataNascimento, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </fieldset>
                            <p style="clear: both" />
                            <p style="clear: both" />
                            <div class="form-group">
                                <fieldset>
                                    <legend>Contatos</legend>
                                    <div class="col-sm-2">
                                        @Html.LabelFor(model => model.TelefoneResidencial)
                                        @Html.TextBoxFor(model => model.TelefoneResidencial, (object)new { @class = "form-control phone", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.TelefoneResidencial, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.LabelFor(model => model.TelefoneCelular)
                                        @Html.TextBoxFor(model => model.TelefoneCelular, (object)new { @class = "form-control phone", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.TelefoneCelular, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-2">
                                        @Html.LabelFor(model => model.TelefoneComercial)
                                        @Html.TextBoxFor(model => model.TelefoneComercial, (object)new { @class = "form-control phone", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.TelefoneComercial, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-5">
                                        @Html.LabelFor(model => model.Email)
                                        @Html.TextBoxFor(model => model.Email, (object)new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </fieldset>
                            </div>
                            <div class="form-group">
                                @Html.EditorFor(model => model.Endereco, "Endereco")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="box-footer">
                    @using (Html.BeginForm())
                    {
                        
                        <div class="form-actions no-color">
                            <input type="submit" value="Excluir" class="btn btn-danger" />
                            @Html.ActionLink("Voltar", "Index", null, new { @class = "btn btn-default" })
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</section>

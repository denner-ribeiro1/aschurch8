@model ASChurchManager.Web.Areas.Secretaria.ViewModels.Membro.ArquivoMembroVM


<div class="form-group">
    <fieldset>
        <legend>Formações</legend>
        @if (!Model.IsReadOnly)
        {
            <div class="row">
                <div>
                    <div class="col-sm-3">
                        <div class="checkboxCadastrado">
                            @Html.LabelFor(model => model.Cadastrado, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Cadastrado, Html.GetEnumSelectList(typeof(ASChurchManager.Domain.Types.SimNao)), htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Cadastrado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.CursoId, htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CursoId, Model.SelectCursos, "", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CursoId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-sm-4">
                    @Html.LabelFor(model => model.Local, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Local, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Local, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-5">
                    @Html.LabelFor(model => model.NomeCurso, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.NomeCurso, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NomeCurso, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-3">
                    @Html.LabelFor(model => model.DataInicioCurso, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DataInicioCurso, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DataInicioCurso, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-3">
                    @Html.LabelFor(model => model.DataEncerramentoCurso, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.DataEncerramentoCurso, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DataEncerramentoCurso, "", new { @class = "text-danger" })
                </div>
                <div class="col-sm-3">
                    @Html.LabelFor(model => model.CargaHoraria, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.CargaHoraria, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CargaHoraria, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    @Html.LabelFor(model => model.ArquivoCurso, htmlAttributes: new { @class = "control-label" })
                    @Html.TextBoxFor(m => m.ArquivoCurso, new { @class = "form-control", type = "file", name = "Arquivo", accept = "application/pdf" })
                    @Html.ValidationMessageFor(model => model.ArquivoCurso, "", new { @class = "text-danger" })
                </div>
                <br />
                <button type="button" class="btn btn-primary" id="btnAddCurso">
                    <span class="glyphicon glyphicon-plus"></span> Adicionar
                </button>
                <button type="button" class="btn btn-warning" id="btnCancCurso">
                    <span class="glyphicon glyphicon-ban-circle"></span> Cancelar
                </button>
            </div>
        }
        <div class="box-body jtable-main-container">
            <table style="width:100%" id="tbCursos" class="jtable">
                <thead>
                    <tr>
                        <th class="jtable-column-header" style="width:20%;"><span class="jtable-column-header-text">Curso</span></th>
                        <th class="jtable-column-header" style="width:20%;"><span class="jtable-column-header-text">Local</span></th>
                        <th class="jtable-column-header" style="width:15%;"><span class="jtable-column-header-text">Data Início</span></th>
                        <th class="jtable-column-header" style="width:15%;"><span class="jtable-column-header-text">Data Encer.</span></th>
                        <th class="jtable-column-header" style="width:10%;"><span class="jtable-column-header-text">Carga Horária</span></th>
                        <th class="jtable-column-header" style="width:20%;"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="6">Não há Cursos cadastrados para o Membro</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </fieldset>
</div>


@model ASChurchManager.Web.Areas.Admin.ViewModels.Template.TemplateViewModel

@section styles{
    <link rel="stylesheet" href="~/lib/plugins/ckeditor/contents.css" />
    <link rel="stylesheet" href="~/lib/plugins/ckeditor/skins/moono/editor.css" />
    <link rel="stylesheet" href="~/lib/plugins/ckeditor/skins/moono/dialog.css" />
}


@using (Html.BeginForm("Create", "Template", FormMethod.Post, new { id = "frmTemplate" }))
{
    <section class="content">
        <div class="row">
            <div class="col-lg-12">
                <div class="box box-primary">
                    <div class="box-header">
                        <h3 class="box-title">
                            Template - Inclusão
                        </h3>
                    </div>
                    <div class="box-body">
                        <div style="height: 100%;"></div>
                        <div>

                            <div>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label" })
                                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TipoTemplate, htmlAttributes: new { @class = "control-label" })
                                        @Html.DropDownListFor(model => model.TipoTemplate, Html.GetEnumSelectList(Model.TipoTemplate.GetType()), htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.TipoTemplate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-sm-12">
                                    <fieldset>
                                        <legend>Margens</legend>
                                        <div class="form-group">
                                            <div class="col-sm-2">
                                                @Html.LabelFor(model => model.MargemAcima, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.MargemAcima, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.MargemAcima, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-sm-2">
                                                @Html.LabelFor(model => model.MargemAbaixo, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.MargemAbaixo, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.MargemAbaixo, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-sm-2">
                                                @Html.LabelFor(model => model.MargemEsquerda, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.MargemEsquerda, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.MargemEsquerda, "", new { @class = "text-danger" })
                                            </div>
                                            <div class="col-sm-2">
                                                @Html.LabelFor(model => model.MargemDireita, htmlAttributes: new { @class = "control-label" })
                                                @Html.EditorFor(model => model.MargemDireita, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.MargemDireita, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </fieldset>
                                </div>

                                <p style="clear:both" />
                                <fieldset>
                                    <legend>Conteúdo</legend>
                                    @await Html.PartialAsync("_TemplateTagList", Model.TagsDisponiveis)
                                    <p style="clear:both" />
                                    <div class="form-group">
                                        @Html.TextAreaFor(model => model.Conteudo)
                                    </div>
                                </fieldset>
                            </div>

                        </div>
                    </div>
                    <div class="box-footer">
                        <button type="button" class="btn btn-primary" id="btnSalvar">
                            <span class="glyphicon glyphicon-floppy-saved"></span> Salvar
                        </button>
                        <a href="@Url.Action("Index", "Template")" class="btn btn-default">
                            <span class="glyphicon glyphicon-home" aria-hidden="true"></span> Voltar
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </section>
}

@section scripts{
    <script type="text/javascript" src="~/lib/plugins/ckeditor/ckeditor.js"></script>
    <script type="text/javascript" src="~/lib/plugins/ckeditor/adapters/ckeditorjquery.js"></script>
    <script type="text/javascript" src="~/lib/plugins/ckeditor/build-config.js"></script>
    <script type="text/javascript" src="~/lib/plugins/ckeditor/config.js"></script>
    <script type="text/javascript" src="~/lib/plugins/ckeditor/styles.js"></script>
    <script type="text/javascript" src="~/lib/plugins/ckeditor/lang/pt-br.js"></script>
    <script type="text/javascript" src="~/js/template.min.js"></script>
}